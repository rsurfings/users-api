swagger: "2.0"
info:
  description: API de gestão de Usuários e Transações
  version: 1.0.0
  title: Serviço de Cadastro de Usuários e Transações
  contact:
    name: Ronaldo
    url: "http://localhost:8001"
    email: rsurfings@gmail.com
host: "localhost"
basePath: /
tags:
  - name: Pagamentos
    description: Transactions Controller
  - name: Usuários
    description: User Controller
paths:
  /transactions:
    post:
      tags:
        - Pagamentos
      summary: Cria uma nova transação entre duas contas de usuario
      operationId: createTransactionUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: body
          name: request
          description: requestcreateTransactionUsingPOST
          required: true
          schema:
            $ref: "#/definitions/CreateTransactionRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Transaction"
        "201":
          description: Ok
          schema:
            $ref: "#/definitions/Transaction"
        "401":
          description: Transação não autorizada
          schema:
            $ref: "#/definitions/GenericError"
        "422":
          description: Erro de validação nos campos
          schema:
            $ref: "#/definitions/GenericError"
        "500":
          description: Erro interno do servidor
          schema:
            $ref: "#/definitions/GenericError"
  "/transactions/{transaction_id}":
    get:
      tags:
        - Pagamentos
      summary: Retorna os detalhes de uma transação
      operationId: getTransactionUsingGET
      produces:
        - "*/*"
      parameters:
        - name: transaction_id
          in: path
          description: transaction_id
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Transaction"
        "201":
          description: Ok
          schema:
            $ref: "#/definitions/Transaction"
        "404":
          description: Transação não encontrada
          schema:
            $ref: "#/definitions/GenericError"
        "500":
          description: Erro interno do servidor
          schema:
            $ref: "#/definitions/GenericError"
  /users:
    get:
      tags:
        - Usuários
      summary: "Realiza uma listagem de usuários baseada em filtros. Se um filtro não for especificado, deve listar os usuários odernados por nome."
      operationId: listUsersUsingGET
      produces:
        - application/json;charset=UTF-8
      parameters:
        - name: q
          in: query
          description: q
          required: true
          type: string
      responses:
        "200":
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
        "500":
          description: Erro interno do servidor
          schema:
            $ref: "#/definitions/GenericError"
    post:
      tags:
        - Usuários
      summary: Cadastro de novos usuários no sistema.
      operationId: createUserUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: "#/definitions/CreateUserRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/User"
        "201":
          description: Ok
          schema:
            $ref: "#/definitions/User"
        "422":
          description: Erro de validação nos campos
          schema:
            $ref: "#/definitions/GenericError"
        "500":
          description: Erro interno do servidor
          schema:
            $ref: "#/definitions/GenericError"
  /users/consumers:
    post:
      tags:
        - Usuários
      summary: Cadastro de um perfil de consumidor usuário.
      operationId: createConsumerUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: "#/definitions/CreateConsumerRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Consumer"
        "201":
          description: Ok
          schema:
            $ref: "#/definitions/Consumer"
        "404":
          description: Usuário não encontrado
          schema:
            $ref: "#/definitions/GenericError"
        "422":
          description: Erro de validação nos campos
          schema:
            $ref: "#/definitions/GenericError"
        "500":
          description: Erro interno do servidor
          schema:
            $ref: "#/definitions/GenericError"
  /users/sellers:
    post:
      tags:
        - Usuários
      summary: Cadastro de um perfil de lojista usuário.
      operationId: createSellerUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: integer
          format: int64
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: "#/definitions/CreateSellerRequest"
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Seller"
        "201":
          description: Ok
          schema:
            $ref: "#/definitions/Seller"
        "404":
          description: Usuário não encontrado
          schema:
            $ref: "#/definitions/GenericError"
        "422":
          description: Erro de validação nos campos
          schema:
            $ref: "#/definitions/GenericError"
        "500":
          description: Erro interno do servidor
          schema:
            $ref: "#/definitions/GenericError"
  "/users/{user_id}":
    get:
      tags:
        - Usuários
      summary: Retorna dados do usuário.
      operationId: getUserUsingGET
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - name: user_id
          in: path
          description: user_id
          required: true
          type: string
      responses:
        "200":
          description: Ok
          schema:
            $ref: "#/definitions/UserPayload"
        "404":
          description: Usuário não encontrado
          schema:
            $ref: "#/definitions/GenericError"
        "500":
          description: Erro interno do servidor
          schema:
            $ref: "#/definitions/GenericError"
definitions:
  Accounts:
    type: object
    properties:
      consumer:
        $ref: "#/definitions/Consumer"
      seller:
        $ref: "#/definitions/Seller"
    title: Accounts
  Consumer:
    type: object
    properties:
      id:
        type: integer
        format: int64
      user_id:
        type: integer
        format: int64
      username:
        type: string
    title: Consumer
  CreateConsumerRequest:
    type: object
    properties:
      user_id:
        type: integer
        format: int64
      username:
        type: string
    title: CreateConsumerRequest
  CreateSellerRequest:
    type: object
    properties:
      cnpj:
        type: string
      fantasy_name:
        type: string
      social_name:
        type: string
      user_id:
        type: integer
        format: int64
      username:
        type: string
    title: CreateSellerRequest
  CreateTransactionRequest:
    type: object
    properties:
      payee_id:
        type: integer
        format: int64
      payer_id:
        type: integer
        format: int64
      value:
        type: number
    title: CreateTransactionRequest
  CreateUserRequest:
    type: object
    properties:
      cpf:
        type: string
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    title: CreateUserRequest
  GenericError:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    title: GenericError
  Seller:
    type: object
    properties:
      cnpj:
        type: string
      fantasy_name:
        type: string
      id:
        type: integer
        format: int64
      social_name:
        type: string
      user_id:
        type: integer
        format: int64
      username:
        type: string
    title: Seller
  Transaction:
    type: object
    properties:
      id:
        type: integer
        format: int64
      payee_id:
        type: integer
        format: int64
      payer_id:
        type: integer
        format: int64
      transaction_date:
        type: string
        format: date-time
      value:
        type: number
    title: Transaction
  User:
    type: object
    properties:
      cpf:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
        format: int64
      password:
        type: string
      phone_number:
        type: string
    title: User
  UserPayload:
    type: object
    properties:
      accounts:
        $ref: "#/definitions/Accounts"
      user:
        $ref: "#/definitions/User"
    title: UserPayload
